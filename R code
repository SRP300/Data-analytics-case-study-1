#### Installing and loading packages ####

if (!require("pacman")) install.packages("pacman")
library(pacman)
p_load(tidyverse, janitor, lubridate, patchwork)

# Clean Column names #

ai_impact <- read_csv("Global_AI_Content_Impact_Dataset.csv") %>%
  clean_names()

#### Visual 1: Revenue and Market share impacts from AI Adoption plot  ####

#  Revenue vs AI Adoption plot #
plot_revenue <- ggplot(ai_impact, aes(x = ai_adoption_rate_percent,
                                      y = revenue_increase_due_to_ai_percent,
                                      color = industry)) +
  # Light industry trend lines
  geom_smooth(method = "lm", se = FALSE, size = 1, alpha = 0.3) +
  
  # Bold overall trend line
  geom_smooth(aes(group = 1), method = "lm", se = FALSE,
              color = "black", size = 1.5, linetype = "solid") +
  
  labs(title = "AI Adoption vs Revenue Increase",
       subtitle = "Overall trend highlighted in black, industry trends faded",
       x = "AI Adoption Rate (%)",
       y = "Revenue Increase (%)",
       color = "Industry") +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
    legend.position = "bottom"
  )

# Market Share vs AI Adoption #
plot_market <- ggplot(ai_impact, aes(x = ai_adoption_rate_percent,
                                     y = market_share_of_ai_companies_percent,
                                     color = industry)) +
  # Light industry trend lines #
  geom_smooth(method = "lm", se = FALSE, size = 1, alpha = 0.3) +
  
  # Make a Bold overall trend line #
  geom_smooth(aes(group = 1), method = "lm", se = FALSE,
              color = "black", size = 1.5, linetype = "solid") +
  labs(title = "AI Adoption vs Market Share",
       subtitle = "Overall trend highlighted in black, industry trends faded",
       x = "AI Adoption Rate (%)",
       y = "Market Share (%)",
       color = "Industry") +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
    legend.position = "bottom"
  )

#### Combine both plots into one #
final_dashboard <- (plot_revenue + plot_market) +
  plot_layout(guides = "collect") &
  theme(legend.position = "bottom")

# Print final dashboard #

print(final_dashboard)


#### Visual 2: Make heatmap of AI-Generated Content by Year and Industry ####

plot_heatmap <- ggplot(ai_impact, aes(x = year, y = industry, fill = ai_generated_content_volume_t_bs_per_year)) +
  geom_tile(color = "white") +  # creates the colored tiles
  scale_fill_gradient(low = "lightblue", high = "darkblue") +  # color gradient for values
  labs(
    title = "AI-Generated Content by Year and Industry",
    x = "Year",
    y = "Industry",
    fill = "Content Volume (T BS)"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
    axis.text.x = element_text(angle = 45, hjust = 1),
    panel.grid.minor = element_blank()
  )

#### Visual 3: 

# Set up common theme for graphs #

graph_theme <- theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
    legend.position = "bottom",
    legend.title = element_text(face = "bold"),
    panel.grid.minor = element_blank()
  )
    
# Boxplot of Job Loss by Industry #
    
    plot_boxplot <- ggplot(ai_impact, aes(x = industry, y = job_loss_due_to_ai_percent, fill = industry)) +
      geom_boxplot(alpha = 0.7) +
      labs(title = "Job Loss Due to AI Across Industries",
           x = "Industry",
           y = "Job Loss (%)") +
      theme_minimal() +
      # tilts x-axis labels so they donâ€™t overlap #
      theme(axis.text.x = element_text(angle = 45, hjust = 1),
            legend.position = "none")
    
# Stacked Bar Chart for Human-AI Collaboration 
    
    plot_bar <- ggplot(ai_impact, aes(x = industry, y = human_ai_collaboration_rate_percent, fill = industry)) +
      geom_bar(stat = "identity") +
      labs(title = "Human-AI Collaboration Rate Across Industries",
           x = "Industry",
           y = "Collaboration (%)") +
      theme_minimal() +
      theme(axis.text.x = element_text(angle = 45, hjust = 1),
            legend.position = "none")
    
# Combine into dashboard #
    
    final_dashboard <- (plot_boxplot / plot_bar) +
      plot_layout(guides = "collect") &  # Collect all legends into one
      theme(legend.position = "bottom")  # & copys format for all Put the legend at the bottom

